---------------------------------------------------
| Atmospheric Probe Malfunction Remix             |
| by Scott Fradkin http://www.fradkin.com         |
|                                                 |
| Originally written by Kindohm                   |
| https://kindohm.bandcamp.com/album/expedition   |
| Licensed under a                                |
| Creative Commons Attribution-ShareAlike license |
|                                                 |
| Remix by Scott Fradkin                          |
| Also licensed under a                           |
| Creative Commons Attribution-ShareAlike license |
|                                                 |
| Samples used:                                   |
| keys2 samples from the Expedition release       |
| bd samples from the Dirt installation           |
| sine1 samples generated by Scott Fradkin using  |
| http://www.audiocheck.net/audiofrequencysignalgenerator_sinetone.php |
| github.com/sfradkin/tidal-files/kindohm-remix   |
---------------------------------------------------

cps 0.5

-- here's the original track by kindohm
d1 $ slow 8 $ (superimpose (slow 1.04 . sometimes(rev))) $ ((|+| cutoff (scale 0.001 0.3 $ density 2 sine1)) $ zoom (0, 0.5) $ striate' 1000 (1/10) $
sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30)))
|+| speed (foldEvery [2,3,4] (density 2) $ "[{0.25 1 0.5}%128, {0.5 0.75 1.25 1.75 2.5}%64]")
|+| delay (scale 0.1 0.5 $ sine1)
|+| delaytime (scale 0.001 0.4 $ density 1.5 sine1)
|+| delayfeedback (scale 0.5 0.98 $ density 1.217 sine1)
|+| resonance "0.5"
|+| coarse "{0 4 0 2 0 8 12 64 32 16 0}%16"
|+| crush (sometimes ((negate) <$>) $ scale 1 7 $ density 2.1 sine1)
|+| shape (scale 0 0.4 $ density 1.23 sine1)

hush

-- here are the commands in sequence that make up the remix
-- enjoy!

d1 $ slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30)) # gain "0.8"

d1 $ slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # pan (slow 4 $ scale 0.2 0.8 $ sine1)
  # gain (slow 4 $ scale 0.5 0.8 $ sine1)

d1 $ stack [
  slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # pan (slow 4 $ scale 0.2 0.8 $ sine1)
  # gain (slow 4 $ scale 0.5 0.8 $ sine1),
  sound "bd:9" # coarse "64" # crush "3.5"
]

d1 $ stack [
  slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # pan (slow 4 $ scale 0.2 0.8 $ sine1)
  # gain (slow 4 $ scale 0.5 0.8 $ sine1),
  sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12"
]

d1 $ stack [
  slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # pan (slow 4 $ scale 0.2 0.8 $ sine1)
  # gain (slow 4 $ scale 0.5 0.8 $ sine1),
  sometimes (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12"
]

d1 $ stack [
  slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # pan (slow 4 $ scale 0.2 0.8 $ sine1)
  # gain (slow 4 $ scale 0.5 0.8 $ sine1),
  sometimesBy 0.2 (striate 64)
  $ sometimesBy 0.2 (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12"
]

d1 $ stack [
  sometimesBy 0.3 (# crush "3") $ slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # pan (slow 4 $ scale 0.2 0.8 $ sine1)
  # gain (slow 4 $ scale 0.5 0.8 $ sine1),
  sometimesBy 0.2 (striate 64)
  $ sometimesBy 0.2 (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12"
]

d1 $ stack [
  sometimesBy 0.3 (# crush "3") $ slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # pan (slow 4 $ scale 0.2 0.8 $ sine1)
  # gain (slow 4 $ scale 0.5 0.8 $ sine1),
  sometimesBy 0.2 (striate 64)
  $ sometimesBy 0.2 (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12",
  every 5 (|*| up "7") $ slowspread ($) [striate 64, (# crush "8"), chop 128] $ sound "sine1:10" # gain "1.1" # unit "c" # speed "1"
]

d1 $ stack [
  jux(# coarse "{0 4 0 2 0 8 12 64 32 16 0}%16")
  $ sometimesBy 0.3 (# crush "3") $ slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # pan (slow 4 $ scale 0.2 0.8 $ sine1)
  # gain (slow 4 $ scale 0.5 0.8 $ sine1),
  sometimesBy 0.2 (striate 64)
  $ sometimesBy 0.2 (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12",
  every 5 (|*| up "7") $ slowspread ($) [striate 64, (# crush "8"), chop 128] $ sound "sine1:10" # gain "1.1" # unit "c" # speed "1"
]

d1 $ stack [
  jux(# coarse "{0 4 0 2 0 8 12 64 32 16 0}%16")
  $ sometimesBy 0.3 (# crush "3") $ slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # pan (slow 4 $ scale 0.2 0.8 $ sine1)
  # gain (slow 4 $ scale 0.5 0.8 $ sine1),
  sometimesBy 0.2 (striate 64)
  $ sometimesBy 0.2 (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12",
  jux(# coarse "{2 0 4 14 0 64}%13") $ every 5 (|*| up "7") $ slowspread ($) [striate 64, (# crush "8"), chop 128] $ sound "sine1:10" # gain "1.1" # unit "c" # speed "1"
]

d1 $ stack [
  jux(# coarse "{0 4 0 2 0 8 12 64 32 16 0}%16")
  $ sometimesBy 0.3 (# crush "3") $ slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # gain (slow 4 $ scale 0.3 0.7 $ sine1),
  sometimesBy 0.2 (striate 64)
  $ sometimesBy 0.2 (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12",
  jux(# coarse "{2 0 4 14 0 64}%13") $ every 5 (|*| up "7") $ slowspread ($) [striate 64, (# crush "8"), chop 128] $ sound "sine1:10" # gain "1.1" # unit "c" # speed "1"
]

d1 $ stack [
  jux(# coarse "{0 4 0 2 0 8 12 64 32 16 0}%16")
  $ sometimesBy 0.3 (# crush "3") $ slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # gain (slow 4 $ scale 0.1 0.4 $ sine1),
  sometimesBy 0.2 (striate 64)
  $ sometimesBy 0.2 (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12",
  jux(# coarse "{2 0 4 14 0 64}%13") $ every 5 (|*| up "7") $ slowspread ($) [striate 64, (# crush "8"), chop 128] $ sound "sine1:10" # gain "1.1" # unit "c" # speed "1"
]

d1 $ stack [
  jux(# coarse "{0 4 0 2 0 8 12 64 32 16 0}%16")
  $ sometimesBy 0.3 (# crush "3") $ slow 8 $ zoom (0, 0.5) $ striate' 1000 (1/10) $ (superimpose (slow 1.04 . sometimes(rev)))
  $ sound (samples "keys2*3" (foldEvery [2,3,4] (0.25 ~>) $ run 30))
  # gain (slow 4 $ scale 0.1 0.4 $ sine1),
  sometimesBy 0.2 (striate 64)
  $ sometimesBy 0.2 (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12" # gain "0.8",
  every 5 (|*| up "7") $ slowspread ($) [striate 64, (# crush "8"), chop 128] $ sound "sine1:10" # gain "1.1" # unit "c" # speed "1" # coarse "{120 0 80 14 0 64}%13"
]

d1 $ stack [
sometimesBy 0.2 (striate 64)
$ sometimesBy 0.2 (striate 128) $ sound "[[bd:9] [bd:9*3] [~ bd:9 ~ bd:9] [bd:9*4 ~ bd:9 ~ bd:9*6]]/4" # coarse "64" # crush "3.5" |*| up "-12" # gain "0.8",
  every 5 (|*| up "7") $ slowspread ($) [striate 64, (# crush "8"), chop 128] $ sound "sine1:10" # gain "1.1" # unit "c" # speed "1" # coarse "{120 0 80 14 0 64}%13"
]

hush
